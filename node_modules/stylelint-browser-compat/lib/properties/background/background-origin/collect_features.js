"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.collectFeatures = collectFeatures;
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const BOX_VALUE_LIST = ['border-box', 'padding-box', 'content-box', 'text'];
async function collectFeatures({
  bgLayerList,
  parent
}) {
  const prop = parent.prop.replace(/^-(webkit|moz|ms|o)-/, '');
  if (prop !== 'background') {
    return [];
  }
  const offset = parent.prop.length + (parent.raws.between?.length ?? 0);
  const promises = [];
  const features = [];

  // background-origin / background-clip
  for (const bgLayer of bgLayerList) {
    const boxList = bgLayer.filter(node => BOX_VALUE_LIST.includes(node.value));

    // https://drafts.csswg.org/css-backgrounds/#the-background
    // If one <box> value is present then it sets both background-origin and background-clip to that value
    // If two values are present, then the first sets background-origin and the second background-clip.
    const backgroundOriginNode = boxList[0];
    if (backgroundOriginNode != null) {
      const index = offset + backgroundOriginNode.sourceIndex;
      const endIndex = offset + backgroundOriginNode.sourceEndIndex;
      features.push({
        endIndex,
        id: `properties.background.background-origin`,
        index,
        name: `Values of background-origin specified as background`,
        node: parent
      });
      promises.push(Promise.resolve().then(() => _interopRequireWildcard(require("../../background-origin/collect_features"))).then(({
        collectFeatures
      }) => {
        return collectFeatures({
          nodes: [backgroundOriginNode],
          parent
        });
      }));
    }
  }
  return [...features, ...(await Promise.all(promises)).flat()];
}