"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.collectFeatures = collectFeatures;
var _nodePath = _interopRequireDefault(require("node:path"));
var _tsResults = require("ts-results");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
async function collectFeatures({
  nodes,
  parent
}) {
  const prop = parent.prop.replace(/^-(webkit|moz|ms|o)-/, '');
  if (prop !== 'background' && prop !== 'background-image') {
    return [];
  }
  const features = [];
  const offset = parent.prop.length + (parent.raws.between?.length ?? 0);
  for (const node of nodes) {
    if (node.type !== 'function' || node.value !== 'url' || node.nodes.length !== 1 || node.nodes[0] == null) {
      continue;
    }
    const urlPathNode = node.nodes[0];
    const url = _tsResults.Result.wrap(() => new URL(urlPathNode.value, 'https://example.com/')).unwrapOr(null);
    if (url == null || url.protocol !== 'http:' && url.protocol !== 'https:') {
      continue;
    }
    const extension = _nodePath.default.extname(url.pathname);
    if (extension === '.svg') {
      const index = offset + urlPathNode.sourceIndex;
      const endIndex = offset + urlPathNode.sourceEndIndex;
      features.push({
        endIndex,
        id: `properties.background-image.svg_images`,
        index,
        name: `SVG image as background-image`,
        node: parent
      });
    }
  }
  return features;
}