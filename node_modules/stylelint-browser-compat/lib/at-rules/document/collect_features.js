"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.collectFeatures = collectFeatures;
var _postcssValueParser = _interopRequireDefault(require("postcss-value-parser"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
async function collectFeatures({
  ignoreFeatures,
  node
}) {
  const promises = [];
  const valueRoot = (0, _postcssValueParser.default)(node.params);
  for (const valueNode of valueRoot.nodes) {
    if (valueNode.type === 'function' && valueNode.value === 'regexp') {
      promises.push(Promise.resolve().then(() => _interopRequireWildcard(require("./regexp/collect_features"))).then(({
        collectFeatures
      }) => {
        return collectFeatures({
          node: valueNode,
          parent: node
        });
      }));
    }
  }
  promises.push(Promise.resolve().then(() => _interopRequireWildcard(require("../../collect_features"))).then(({
    collectFeatures
  }) => {
    return collectFeatures({
      container: node,
      ignoreFeatures
    });
  }));
  const features = (await Promise.all(promises)).flat();
  return features;
}