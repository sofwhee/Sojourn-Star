"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.collectFeatures = collectFeatures;
const RULE_NAME_MAP = {
  hsl: `types.color.hsl.alpha_parameter`,
  rgb: `types.color.rgb.alpha_parameter`
};
const FUNCTION_NAME_LIST = ['hsl', 'rgb'];
function isTargetFunctionNameList(value) {
  return FUNCTION_NAME_LIST.includes(value);
}
async function collectFeatures({
  node,
  parent
}) {
  const funcName = node.value.replace(/^-(?:ms|o|webkit|moz)-/, '');
  if (!isTargetFunctionNameList(funcName)) {
    return [];
  }
  const features = [];
  const offset = parent.prop.length + (parent.raws.between?.length ?? 0);
  if (node.nodes.length === 7 && node.nodes[0]?.type === 'word' && (node.nodes[1]?.type === 'space' || node.nodes[1]?.type === 'div') && node.nodes[2]?.type === 'word' && (node.nodes[3]?.type === 'space' || node.nodes[3]?.type === 'div') && node.nodes[4]?.type === 'word' && node.nodes[5]?.type === 'div' && node.nodes[6]?.type === 'word') {
    const index = offset + node.sourceIndex;
    const endIndex = offset + node.sourceEndIndex;
    features.push({
      endIndex,
      id: RULE_NAME_MAP[funcName],
      index,
      name: `Alpha parameter passed to ${funcName}()`,
      node: parent
    });
  }
  return features;
}