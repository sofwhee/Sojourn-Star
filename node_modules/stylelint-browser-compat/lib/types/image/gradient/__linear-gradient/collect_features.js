"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.collectFeatures = collectFeatures;
var _arrayPrototype = _interopRequireDefault(require("array.prototype.at"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
async function collectFeatures({
  node,
  parent
}) {
  const funcName = node.value.replace(/^-(?:ms|o|webkit|moz)-/, '');
  if (funcName !== 'linear-gradient' && funcName !== 'repeating-linear-gradient') {
    return [];
  }
  const promises = [];
  const colorStopList = [[]];
  for (const chlid of node.nodes) {
    if (chlid.type === 'div' && chlid.value === ',') {
      colorStopList.push([]);
    } else {
      const colorStop = (0, _arrayPrototype.default)(colorStopList, -1);
      colorStop?.push(chlid);
    }
  }
  for (const [colorStopIndex, colorStop] of colorStopList.entries()) {
    promises.push(Promise.resolve().then(() => _interopRequireWildcard(require("./doubleposition/collect_features"))).then(({
      collectFeatures
    }) => {
      return collectFeatures({
        colorStop,
        node,
        parent
      });
    }));
    promises.push(Promise.resolve().then(() => _interopRequireWildcard(require("./interpolation_hints/collect_features"))).then(({
      collectFeatures
    }) => {
      return collectFeatures({
        colorStop,
        colorStopIndex,
        node,
        parent
      });
    }));
    promises.push(Promise.resolve().then(() => _interopRequireWildcard(require("./to/collect_features"))).then(({
      collectFeatures
    }) => {
      return collectFeatures({
        colorStop,
        node,
        parent
      });
    }));
    promises.push(Promise.resolve().then(() => _interopRequireWildcard(require("./unitless_0_angle/collect_features"))).then(({
      collectFeatures
    }) => {
      return collectFeatures({
        colorStop,
        colorStopIndex,
        node,
        parent
      });
    }));
  }
  const features = (await Promise.all(promises)).flat();
  return features;
}